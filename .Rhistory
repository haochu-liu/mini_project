ARG <- simbac_ARG(100, 5, 100, delta = 5, node_max = 100000, output_eff_R = TRUE)
tree1 <- local_tree(ARG, 1)
tree50 <- local_tree(ARG, 50)
tree80 <- local_tree(ARG, 80)
height_t_df$s1[i] <- tree1$sum_time
height_t_df$s50[i] <- tree50$sum_time
height_t_df$s80[i] <- tree80$sum_time
if (i%%100 == 0) {print(paste("Complete", i, "iterations"))}
}
#| echo: true
n <- 100
height_rate <- n:2 * (n-1):1 / 2
height_density <- function(x) {
dhypoexp(x, rate=height_rate)
}
hist1 <- ggplot(height_t_df, aes(x = s1)) +
geom_histogram(aes(y = after_stat(density)),
bins = 30,
fill = "lightgreen",
color = "black",
alpha = 0.7) +
stat_function(fun = height_density, # Use your custom function here
color = "darkblue",
linewidth = 1.2,
linetype = "solid") +
labs(title = "Locat tree at site 1",
x = "Height",
y = "Density") +
theme_minimal()
hist2 <- ggplot(height_t_df, aes(x = s50)) +
geom_histogram(aes(y = after_stat(density)),
bins = 30,
fill = "lightgreen",
color = "black",
alpha = 0.7) +
stat_function(fun = height_density, # Use your custom function here
color = "darkblue",
linewidth = 1.2,
linetype = "solid") +
labs(title = "Locat tree at site 50",
x = "Height",
y = "Density") +
theme_minimal()
hist3 <- ggplot(height_t_df, aes(x = s80)) +
geom_histogram(aes(y = after_stat(density)),
bins = 30,
fill = "lightgreen",
color = "black",
alpha = 0.7) +
stat_function(fun = height_density, # Use your custom function here
color = "darkblue",
linewidth = 1.2,
linetype = "solid") +
labs(title = "Locat tree at site 80",
x = "Height",
y = "Density") +
theme_minimal()
combined_hist <- hist1 + hist2 + hist3
combined_hist <- combined_hist +
plot_annotation(
title = "simbac_ARG(100, 5, 100, delta = 5, node_max = 100000)")
print(combined_hist)
#| echo: true
n_values <- c(20, 100, 200)
rho_values <- seq(2, 10, by = 2)
delta_values <- c(1, 10, 20)
func_vec <- c("sim_FSM_ARG(optimise=T)", "sim_FSM_ARG(optimise=F)", "simbac_ARG")
node_df <- expand.grid(
n_node = NA,
n = n_values,
rho = rho_values,
delta = delta_values,
func = func_vec
)
set.seed(100)
for (i in 1:nrow(node_df)) {
n <- node_df$n[i]
rho <- node_df$rho[i]
delta <- node_df$delta[i]
func_str <- node_df$func[i]
node_vec <- rep(NA, 10)
if (func_str == "sim_FSM_ARG(optimise=T)") {
for (j in 1:10) {
r <- sim_FSM_ARG(n, rho, 100, bacteria = TRUE, delta = delta,
node_max = 100000, optimise_recomb = TRUE)
node_vec[j] <- length(r$node_height)
}
} else if (func_str == "sim_FSM_ARG(optimise=F)") {
for (j in 1:10) {
r <- sim_FSM_ARG(n, rho, 100, bacteria = TRUE, delta = delta,
node_max = 100000, optimise_recomb = FALSE)
node_vec[j] <- length(r$node_height)
}
} else if (func_str == "simbac_ARG") {
for (j in 1:10) {
r <- simbac_ARG(n, rho, 100, delta, node_max = 100000)
node_vec[j] <- length(r$node_height)
}
}
node_df$n_node[i] <- median(node_vec)
if (i%%10 == 0) {print(paste("Complete", i, "iterations"))}
}
View(node_df)
#| echo: true
n_values <- c(20, 100, 200)
rho_values <- seq(2, 10, by = 2)
delta_values <- c(1, 10, 20)
func_vec <- c("sim_FSM_ARG(optimise=T)", "sim_FSM_ARG(optimise=F)", "simbac_ARG")
node_df <- expand.grid(
n_node = NA,
n = n_values,
rho = rho_values,
delta = delta_values,
func = func_vec
)
set.seed(100)
for (i in 1:nrow(node_df)) {
n <- node_df$n[i]
rho <- node_df$rho[i]
delta <- node_df$delta[i]
func_str <- node_df$func[i]
node_vec <- rep(NA, 10)
if (func_str == "sim_FSM_ARG(optimise=T)") {
for (j in 1:10) {
r <- sim_FSM_ARG(n, rho, 100, bacteria = TRUE, delta = delta,
node_max = 100000, optimise_recomb = TRUE)
node_vec[j] <- length(r$node_height)
}
} else if (func_str == "sim_FSM_ARG(optimise=F)") {
for (j in 1:10) {
r <- sim_FSM_ARG(n, rho, 100, bacteria = TRUE, delta = delta,
node_max = 100000, optimise_recomb = FALSE)
node_vec[j] <- length(r$node_height)
}
} else if (func_str == "simbac_ARG") {
for (j in 1:10) {
r <- simbac_ARG(n, rho, 100, delta, node_max = 100000)
node_vec[j] <- length(r$node_height)
}
}
node_df$n_node[i] <- median(node_vec)
print(paste("Complete", i, "iterations"))
}
rho_values
3*5*3*3
View(node_df)
View(node_df)
View(node_df)
#| echo: true
ggplot(node_df, aes(x=rho, y=n_node, color=func, group = interaction(n, delta))) +
geom_line(linewidth = 1.2) +
geom_point(size = 3, shape = 21, fill = "white", stroke = 1.2) +
scale_color_manual(values=c("TRUE"="darkblue", "FALSE"="darkred")) +
labs(
title = "Number of Nodes from sim_FSM_ARG2()",
x = "# of Leaf Lineages",
y = "# of Nodes",
color = "Optimise"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12)
)
#| echo: true
ggplot(node_df, aes(x=rho, y=n_node, color=func, group = interaction(n, delta))) +
geom_line(linewidth = 1.2) +
geom_point(size = 3, shape = 21, fill = "white", stroke = 1.2) +
scale_color_manual(values=c("TRUE"="darkblue", "FALSE"="darkred")) +
labs(
title = "",
x = "rho",
y = "# of Nodes",
color = "function"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12)
)
?interaction
??interaction
library(dplyr)
?interaction
#| echo: true
ggplot(node_df, aes(x=rho, y=n_node, color=func)) +
geom_line(aes(group = interaction(n, delta, func)), linewidth = 1.2) +
geom_point(size = 3, shape = 21, fill = "white", stroke = 1.2) +
scale_color_manual(values=c("TRUE"="darkblue", "FALSE"="darkred")) +
facet_grid(n ~ delta) +
labs(
title = "",
x = "rho",
y = "# of Nodes",
color = "function"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12)
)
#| echo: true
node_plot <- node_df
paste0("n = ", node_plot$n)
#| echo: true
node_plot <- node_df
node_plot$n <- paste0("n = ", node_plot$n)
node_plot$delta <- paste0("delta = ", node_plot$delta)
ggplot(node_plot, aes(x=rho, y=n_node, color=func)) +
geom_line(aes(group = interaction(n, delta, func)), linewidth = 1.2) +
geom_point(size = 3, shape = 21, fill = "white", stroke = 1.2) +
scale_color_manual(values=c("TRUE"="darkblue", "FALSE"="darkred")) +
facet_grid(n ~ delta) +
labs(
title = "",
x = "rho",
y = "# of Nodes",
color = "function"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12),
legend.position = "bottom"
)
#| echo: true
node_plot <- node_df
node_plot$n <- paste0("n = ", node_plot$n)
node_plot$delta <- paste0("delta = ", node_plot$delta)
ggplot(node_plot, aes(x=rho, y=n_node, color=func)) +
geom_line(aes(group = interaction(n, delta, func)), linewidth = 1.2) +
geom_point(size = 3, shape = 21, fill = "white", stroke = 1.2) +
scale_color_manual(values=c("TRUE"="darkblue", "FALSE"="darkred")) +
facet_grid(n ~ delta) +
labs(
title = "",
x = "rho",
y = "# of Nodes",
color = "function"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
strip.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 9),
panel.spacing = unit(0.5, "cm"),
legend.position = "bottom" # Place the legend at the bottom for better space
)
View(node_plot)
View(node_plot)
#| echo: true
node_plot <- node_df
node_plot$n <- paste0("n = ", node_plot$n)
node_plot$delta <- paste0("delta = ", node_plot$delta)
ggplot(node_plot, aes(x=rho, y=n_node, color=func)) +
geom_line(aes(group = interaction(n, delta, func)), linewidth = 1.2, alpha=0.5) +
geom_point(size = 2, shape = 21, fill = "white", stroke = 1.2, alpha=0.5) +
scale_color_manual(values=c("sim_FSM_ARG(optimise=T)"="darkblue",
"sim_FSM_ARG(optimise=F)"="darkred",
"simbac_ARG"="darkgreen")) +
facet_grid(n ~ delta) +
labs(
title = "",
x = "rho",
y = "# of Nodes",
color = "function"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12),
legend.position = "bottom"
)
#| echo: true
node_plot <- node_df
node_plot$n <- paste0("n = ", node_plot$n)
node_plot$delta <- paste0("delta = ", node_plot$delta)
ggplot(node_plot, aes(x=rho, y=n_node, color=func)) +
geom_line(aes(group = interaction(n, delta, func)), linewidth = 1.2, alpha=0.2) +
geom_point(size = 2, shape = 21, fill = "white", stroke = 1.2, alpha=0.2) +
scale_color_manual(values=c("sim_FSM_ARG(optimise=T)"="darkblue",
"sim_FSM_ARG(optimise=F)"="darkred",
"simbac_ARG"="darkgreen")) +
facet_grid(n ~ delta) +
labs(
title = "",
x = "rho",
y = "# of Nodes",
color = "function"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12),
legend.position = "bottom"
)
#| echo: true
node_plot <- node_df
node_plot$n <- paste0("n = ", node_plot$n)
node_plot$delta <- paste0("delta = ", node_plot$delta)
ggplot(node_plot, aes(x=rho, y=n_node, color=func)) +
geom_line(aes(group = interaction(n, delta, func)), linewidth = 1.2, alpha=0.7) +
geom_point(size = 2, shape = 21, fill = "white", stroke = 1.2, alpha=0.7) +
scale_color_manual(values=c("sim_FSM_ARG(optimise=T)"="darkblue",
"sim_FSM_ARG(optimise=F)"="darkred",
"simbac_ARG"="darkgreen")) +
facet_grid(n ~ delta) +
labs(
title = "",
x = "rho",
y = "# of Nodes",
color = "function"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12),
legend.position = "bottom"
)
#| echo: true
node_plot <- node_df
node_plot$n <- paste0("n = ", node_plot$n)
node_plot$delta <- paste0("delta = ", node_plot$delta)
ggplot(node_plot, aes(x=rho, y=n_node, color=func)) +
geom_line(aes(group = interaction(n, delta, func)), linewidth = 1.2, alpha=0.7) +
geom_point(size = 2, shape = 21, fill = "white", stroke = 1.2, alpha=0.7) +
scale_color_manual(values=c("sim_FSM_ARG(optimise=T)"="darkblue",
"sim_FSM_ARG(optimise=F)"="darkred",
"simbac_ARG"="darkgreen")) +
facet_grid(n ~ delta) +
labs(
title = "Number of Nodes by Recombination Rates",
x = "rho",
y = "# of Nodes",
color = "function"
) +
scale_y_continuous(trans='log10') +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12),
legend.position = "bottom"
)
#| echo: true
benchmark_with_opt <- microbenchmark(
sim_FSM_ARG(100, 10, 100, bacteria = TRUE, delta = 10,
node_max = 100000, optimise_recomb = TRUE),
times = 10,
setup=set.seed(10)
)
benchmark_without_opt <- microbenchmark(
sim_FSM_ARG(100, 10, 100, bacteria = TRUE, delta = 10,
node_max = 100000, optimise_recomb = FALSE),
times = 10,
setup=set.seed(10)
)
benchmark_simbac <- microbenchmark(
simbac_ARG(100, 10, 100, delta = 10, node_max = 100000),
times = 10,
setup=set.seed(10)
)
benchmark_with_opt
benchmark_without_opt
benchmark_simbac
benchmark_with_opt
benchmark_without_opt
benchmark_simbac
View(node_plot)
save(node_plot, file = "06_13_pre_node_df.Rda")
#| echo: true
ggplot(time_df, aes(x=func, y=time, fill=func)) +
geom_violin(width=1, alpha=0.5) +
geom_boxplot(width=0.1, color="black", alpha=0.2) +
labs(title = "# of leaf lineages = 100, rho = 5",
x = "Functions",
y = "ARG height") +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12)
)
#| echo: true
n <- 100
height_rate <- n:2 * (n-1):1 / 2
height_density <- function(x) {
dhypoexp(x, rate=height_rate)
}
hist1 <- ggplot(height_t_df, aes(x = s1)) +
geom_histogram(aes(y = after_stat(density)),
bins = 30,
fill = "lightgreen",
color = "black",
alpha = 0.7) +
stat_function(fun = height_density, # Use your custom function here
color = "darkblue",
linewidth = 1.2,
linetype = "solid") +
labs(title = "Locat tree at site 1",
x = "Height",
y = "Density") +
theme_minimal()
hist2 <- ggplot(height_t_df, aes(x = s50)) +
geom_histogram(aes(y = after_stat(density)),
bins = 30,
fill = "lightgreen",
color = "black",
alpha = 0.7) +
stat_function(fun = height_density, # Use your custom function here
color = "darkblue",
linewidth = 1.2,
linetype = "solid") +
labs(title = "Locat tree at site 50",
x = "Height",
y = "Density") +
theme_minimal()
hist3 <- ggplot(height_t_df, aes(x = s80)) +
geom_histogram(aes(y = after_stat(density)),
bins = 30,
fill = "lightgreen",
color = "black",
alpha = 0.7) +
stat_function(fun = height_density, # Use your custom function here
color = "darkblue",
linewidth = 1.2,
linetype = "solid") +
labs(title = "Locat tree at site 80",
x = "Height",
y = "Density") +
theme_minimal()
combined_hist <- hist1 + hist2 + hist3
combined_hist <- combined_hist +
plot_annotation(
title = "simbac_ARG(100, 5, 100, delta = 5, node_max = 100000)")
print(combined_hist)
#| echo: true
node_plot <- node_df
node_plot$n <- paste0("n = ", node_plot$n)
node_plot$delta <- paste0("delta = ", node_plot$delta)
ggplot(node_plot, aes(x=rho, y=n_node, color=func)) +
geom_line(aes(group = interaction(n, delta, func)), linewidth = 1.2, alpha=0.7) +
geom_point(size = 2, shape = 21, fill = "white", stroke = 1.2, alpha=0.7) +
scale_color_manual(values=c("sim_FSM_ARG(optimise=T)"="darkblue",
"sim_FSM_ARG(optimise=F)"="darkred",
"simbac_ARG"="darkgreen")) +
facet_grid(n ~ delta) +
labs(
title = "Number of Nodes by Recombination Rates",
x = "rho",
y = "# of Nodes",
color = "function"
) +
scale_y_continuous(trans='log10') +
theme_minimal() +
theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 16),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(size = 16),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 16),
legend.text = element_text(size = 12),
legend.position = "bottom"
)
benchmark_simbac
benchmark_with_opt
benchmark_without_opt
