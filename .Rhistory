knitr::opts_chunk$set(echo = TRUE)
getwd()
library(coala)
knitr::opts_chunk$set(echo = TRUE)
library(coala)
library(ggplot2)
source("abc_functions/abc_kernel.r")
source("abc_functions/abc_basic.r")
source("abc_functions/abc_IEnKI.r")
source("abc_functions/abc_kernel.r")
source("abc_functions/abc_basic.r")
source("abc_functions/abc_IEnKI.r")
library(coala)
library(ggplot2)
source("abc_functions/abc_kernel.r")
source("abc_functions/abc_basic.r")
source("abc_functions/abc_IEnKI.r")
library(coala)
library(ggplot2)
source("abc_functions/abc_kernel.r")
source("abc_functions/abc_basic.r")
source("abc_functions/abc_IEnKI.r")
sfs <- c(112, 57, 24, 34, 16, 29, 8, 10, 15)
model <- coal_model(10, 50) +
feat_mutation(par_prior("theta", runif(1, 1, 5))) +
sumstat_sfs()
sim_data <- simulate(model, nsim = 2000, seed = 17)
# Getting the parameters
sim_param <- create_abc_param(sim_data, model)
# Getting the summary statistics
sim_sumstat <- create_abc_sumstat(sim_data, model)
basic_uniform <- abc_basic(sfs, matrix(sim_param$theta), sim_sumstat, 50,
kernel='uniform')
basic_gaussian <- abc_basic(sfs, matrix(sim_param$theta), sim_sumstat, 50,
kernel='Gaussian', sigma=rep(1, 9))
epsilon <- 10^(seq(from=10, to=-2, by=-1))
Sigma <- diag(rep(1, length(sfs)))
abc_IEnKI_list <- abc_IEnKI(sfs, matrix(sim_param$theta),
as.matrix(sim_sumstat), epsilon, Sigma)
pdf_values <- dnorm(abc_IEnKI_list$sumstat[, 1],
mean=abc_IEnKI_list$mu_T[1], sd=abc_IEnKI_list$C_T[1, 1])
# Define the x range
x_vals <- seq(-5, 5, length.out = 50)
# Define the functions
scatter1 <- x_vals^2   # Function 1 (scatter)
scatter2 <- sin(x_vals)  # Function 2 (scatter)
line_func <- exp(-x_vals^2)  # Function 3 (line)
# Create a data frame for plotting
df <- data.frame(
x = rep(x_vals, 3),  # Repeat x values for each function
y = c(scatter1, scatter2, line_func),  # Combine y values
type = rep(c("Scatter 1: x^2", "Scatter 2: sin(x)", "Line: exp(-x^2)"), each = length(x_vals)) # Labels
)
# Plot with ggplot2
ggplot(df, aes(x = x, y = y, color = type)) +
geom_point(data = subset(df, type != "Line: exp(-x^2)"), size = 3) +  # Scatter plots
geom_line(data = subset(df, type == "Line: exp(-x^2)"), size = 1.2) + # Line plot
scale_color_manual(values = c("red", "blue", "black")) +  # Custom colors
labs(title = "Scatter and Line Plot in ggplot2", x = "X-axis", y = "Y-axis") +
theme_minimal()
View(df)
typeof(abc_basic_list$sumstat[, 1])
abc_basic_list$sumstat[, 1] == abc_IEnKI_list$sumstat[, 1]
abc_basic_list$sumstat[, 1]
basic_uniform$sumstat[, 1] == abc_IEnKI_list$sumstat[, 1]
typeof(basic_uniform$sumstat[, 1])
View(sim_sumstat)
basic_uniform$sumstat[, 1] == sim_sumstat[, 1]
sum(basic_uniform$sumstat[, 1] == sim_sumstat[, 1])
nrow(sim_sumstat)
abc_df <- data.frame(
x = rep(sim_sumstat[, 1], 3),
y = c(basic_uniform$weights, basic_uniform$weights, pdf_values),
type = rep(c("ABC uniform kernel", "ABC Gaussian kernel", "ABC-IEnKI"),
each = nrow(sim_sumstat))
)
View(abc_df)
labs(title = "ABC methods", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(abc_df, aes(x = x, y = y, color = type)) +
geom_point(data = subset(df, type != "ABC-IEnKI"), size = 3)
geom_line(data = subset(df, type == "ABC-IEnKI"), size = 1.2)
scale_color_manual(values = c("red", "blue", "black"))
labs(title = "ABC methods", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(abc_df, aes(x = x, y = y, color = type)) +
geom_point(data = subset(abc_df, type != "ABC-IEnKI"), size = 3)
geom_line(data = subset(abc_df, type == "ABC-IEnKI"), size = 1.2)
scale_color_manual(values = c("red", "blue", "black"))
labs(title = "ABC methods", x = "X-axis", y = "Y-axis") +
theme_minimal()
labs(title = "ABC methods", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(abc_df, aes(x = x, y = y, color = type)) +
#geom_point(data = subset(abc_df, type != "ABC-IEnKI"), size = 3)
geom_line(data = subset(abc_df, type == "ABC-IEnKI"), size = 1.2)
scale_color_manual(values = c("red", "blue", "black"))
labs(title = "ABC methods", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(abc_df, aes(x = x, y = y, color = type)) +
geom_point(data = subset(abc_df, type != "ABC-IEnKI"), size = 3)
geom_line(data = subset(abc_df, type == "ABC-IEnKI"), size = 1.2)
scale_color_manual(values = c("red", "blue", "black"))
labs(title = "ABC methods", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(abc_df, aes(x = x, y = y, color = type)) +
geom_point(data = subset(abc_df, type != "ABC-IEnKI"), size = 3) +
geom_line(data = subset(abc_df, type == "ABC-IEnKI"), size = 1.2) +
scale_color_manual(values = c("red", "blue", "black")) +
labs(title = "ABC methods", x = "X-axis", y = "Y-axis") +
theme_minimal()
abc_df <- data.frame(
x = rep(sim_sumstat[, 1], 3),
y = c(basic_uniform$weights, basic_gaussian$weights, pdf_values),
type = rep(c("ABC uniform kernel", "ABC Gaussian kernel", "ABC-IEnKI"),
each = nrow(sim_sumstat))
)
ggplot(abc_df, aes(x = x, y = y, color = type)) +
geom_point(data = subset(abc_df, type != "ABC-IEnKI"), size = 3) +
geom_line(data = subset(abc_df, type == "ABC-IEnKI"), size = 1.2) +
scale_color_manual(values = c("red", "blue", "black")) +
labs(title = "ABC methods", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot(sim_sumstat[, 1], basic_uniform$weights)
plot(sim_sumstat[, 1], pdf_values)
plot(sim_sumstat[, 1], basic_gaussian$weights)
